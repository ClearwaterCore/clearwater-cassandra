#!/bin/sh

# @file clearwater-cassandra.postinst
#
# Copyright (C) Metaswitch Networks 2016
# If license terms are provided to you in a COPYING file in the root directory
# of the source code repository by which you are accessing this code, then
# the license outlined in that COPYING file applies to your use.
# Otherwise no rights are granted except for those provided to you by
# Metaswitch Networks in a separate written agreement.

#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

NAME=cassandra

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

case "$1" in
    configure)
        # Set up Monit configuration for Cassandra
        install -D --mode=0644 /usr/share/clearwater/conf/clearwater-cassandra.monit /etc/monit/conf.d/
        service clearwater-infrastructure restart
        reload clearwater-monit || true

        # Stop the cluster manager, so that it is restarted by Monit and picks
        # up the new Cassandra scaling plugins. We check whether the process is
        # installed to avoid warning logs when etcd isn't being used
        if [ -x "/etc/init.d/clearwater-cluster-manager" ]; then
          service clearwater-cluster-manager stop || /bin/true
        fi

        # No need to restart Cassandra - the clustering plugin will do that
        # when it regenerates cassandra.yaml
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
